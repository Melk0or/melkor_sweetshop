/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CategoriesCategoryIdImport } from './routes/categories/$categoryId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const SignUpIndexLazyImport = createFileRoute('/sign-up/')()
const SignInIndexLazyImport = createFileRoute('/sign-in/')()
const CatalogIndexLazyImport = createFileRoute('/catalog/')()
const CartIndexLazyImport = createFileRoute('/cart/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SignUpIndexLazyRoute = SignUpIndexLazyImport.update({
  path: '/sign-up/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-up/index.lazy').then((d) => d.Route))

const SignInIndexLazyRoute = SignInIndexLazyImport.update({
  path: '/sign-in/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-in/index.lazy').then((d) => d.Route))

const CatalogIndexLazyRoute = CatalogIndexLazyImport.update({
  path: '/catalog/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/catalog/index.lazy').then((d) => d.Route))

const CartIndexLazyRoute = CartIndexLazyImport.update({
  path: '/cart/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/cart/index.lazy').then((d) => d.Route))

const CategoriesCategoryIdRoute = CategoriesCategoryIdImport.update({
  path: '/categories/$categoryId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/categories/$categoryId': {
      id: '/categories/$categoryId'
      path: '/categories/$categoryId'
      fullPath: '/categories/$categoryId'
      preLoaderRoute: typeof CategoriesCategoryIdImport
      parentRoute: typeof rootRoute
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart/'
      fullPath: '/cart/'
      preLoaderRoute: typeof CartIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/catalog/': {
      id: '/catalog/'
      path: '/catalog/'
      fullPath: '/catalog/'
      preLoaderRoute: typeof CatalogIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-in/': {
      id: '/sign-in/'
      path: '/sign-in/'
      fullPath: '/sign-in/'
      preLoaderRoute: typeof SignInIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-up/': {
      id: '/sign-up/'
      path: '/sign-up/'
      fullPath: '/sign-up/'
      preLoaderRoute: typeof SignUpIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  CategoriesCategoryIdRoute,
  CartIndexLazyRoute,
  CatalogIndexLazyRoute,
  SignInIndexLazyRoute,
  SignUpIndexLazyRoute,
})

/* prettier-ignore-end */
